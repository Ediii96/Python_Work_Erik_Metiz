# 6-1. Человек: используйте словарь для сохранения информации об известном вам человеке.
# Сохраните имя, фамилию, возраст и город, в котором живет этот человек.
# Словарь должен содержать ключи с такими именами, как first_name, last_name, age и city.
# Выведите каждый фрагмент информации, хранящийся в словаре.

human = {
    'first_name': 'Ivan',
    'last_name': 'Petrov',
    'age': 13,
    'city': 'Moscow'
}

for h in human:
    print(human[h])

# 6-2. Любимые числа: используйте словарь для хранения любимых чисел.
# Возьмите пять имен и используйте их как ключи словаря.
# Придумайте любимое число для каждого человека и сохраните его как значение в словаре.
# Выведите имя каждого человека и его любимое число. Чтобы задача стала более интересной,
# опросите нескольких друзей и соберите реальные данные для своей программы.

print('\n')
favorite_number = {
    'Lana': 7,
    'Edik': 10,
    'Vasya': 8,
    'Ivan': 1,
    'Den': 999
}

for n in favorite_number:
    print(n + ' любит число ' + str(favorite_number[n]))

# 6-3. Глоссарий: словари Python могут использоваться для моделирования
# «настоящего» словаря (чтобы не создавать путаницы, назовем его «глоссарием»).
# • Вспомните пять терминов из области программирования, которые вы узнали в предыдущих главах.
# Используйте эти слова как ключи глоссария, а их определения — как значения.
# • Выведите каждое слово и его определение в аккуратно отформатированном виде.
# Например, вы можете вывести слово, затем двоеточие и определение; или же слово в одной строке,
# а его определение — с отступом в следующей строке. Используйте символ новой строки (\n)
# для вставки пустых строк между парами «слово-определение» в выходных данных.

print('\n')
glossary = {
    'Ключ': 'Значение',
    'Словарь': 'может в себе содержать любые типы через ключ : значение',
    'Список': 'может в себе содержать любые типы через запятую',
    'str()': 'приводит все символы в строку',
    'int()': 'приводит все строковые числа в числовые',
}

for g in glossary:
    print(g + ' - ' + glossary[g] + '\n')
